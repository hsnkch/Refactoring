# 워크플로우 이름 지정
name: CI/CD

# 워크플로우가 시작될 조건 지정
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  KEY_DIR: src/main/resources
  KEY_DIR_FILE_NAME: application_key.properties
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: refactoring-project-deploy
  PROJECT_NAME: refactoring-project
  CODE_DEPLOY_APPLICATION_NAME: refactoring_project_deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: refactoring_project_deploy_group

jobs:
  build:
    runs-on: ubuntu-latest # 실행 환경 지정

    # 실행 스탭 지정
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Make Key properties file
        run:
          echo ${{ secrets.KEY_PROPERTIES }} | base64 --decode > ${{ env.KEY_DIR }}/${{ env.KEY_DIR_FILE_NAME }}

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          container port: 3306
          mysql database: ${{ secrets.DB_NAME }}
          mysql user: ${{ secrets.DB_USERNAME }}
          mysql password: ${{ secrets.DB_PASSWORD }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash
     
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy
      
      # S3에 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ env.S3_BUCKET_NAME }}/${{ env.PROJECT_NAME }}/$GITHUB_SHA.zip

      # Deploy
      - name: Deploy
        run: |
          aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=${{ env.S3_BUCKET_NAME }},bundleType=zip,key=${{ env.PROJECT_NAME }}/$GITHUB_SHA.zip \
          --region ${{ env.AWS_REGION }} \

      
